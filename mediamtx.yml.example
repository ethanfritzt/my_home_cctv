###############################################
# MediaMTX Configuration
# Raspberry Pi 5 - Home CCTV Server
# Optimized for Pi Zero â†’ Pi 5 streaming
###############################################

# General settings
logLevel: info
logDestinations: [stdout]

# API server (for monitoring and management)
api: yes
apiAddress: 127.0.0.1:9997

# Metrics
metrics: yes
metricsAddress: 127.0.0.1:9998

# RTSP server configuration
# Receives TCP/UDP streams from Pi Zero cameras
rtsp: yes
protocols: [tcp, udp]
rtspAddress: :8554

# HLS server (for web browsers and mobile apps)
hls: yes
hlsAddress: :8888
hlsAlwaysRemux: no
hlsVariant: mpegts
hlsSegmentCount: 7
hlsSegmentDuration: 1s
hlsPartDuration: 200ms
hlsSegmentMaxSize: 50M

# WebRTC server (for low-latency browser viewing)
webrtc: yes
webrtcAddress: :8889
webrtcICEServers2: []

# RTMP server (disabled - not needed for rpicam-vid)
rtmp: no

# Recording (optional - enable for NVR functionality)
# record: yes
# recordPath: ./recordings/%path/%Y-%m-%d_%H-%M-%S-%f
# recordFormat: mp4
# recordPartDuration: 1s
# recordSegmentDuration: 1h
# recordDeleteAfter: 168h  # 7 days

###############################################
# Path Configuration
# Each camera gets its own path
# Note: rpicam-vid streams directly without authentication
###############################################

paths:
  # Default settings for all paths
  all:
    # Global read access (optional - comment out for no auth)
    # readUser: viewer
    # readPass: password

    # Source type - rpicam-vid uses direct TCP/UDP input
    # No special configuration needed for receiving streams

  # Example camera configurations
  # Add a path for each Pi Zero camera

  camera:
    # Basic camera path - no authentication required
    # Pi Zero streams to: tcp://pi5.local:8554/camera
    # View at: rtsp://pi5.local:8554/camera

  front-door:
    # Front door camera
    # Stream from Pi: rpicam-vid --output tcp://pi5.local:8554/front-door

  backyard:
    # Backyard camera

  garage:
    # Garage camera

  living-room:
    # Living room camera

  cam1:
    # Generic camera 1

  cam2:
    # Generic camera 2

  cam3:
    # Generic camera 3

###############################################
# Usage Examples:
###############################################
#
# Stream from Pi Zero camera:
#   rpicam-vid -t 0 --inline --codec h264 \
#     --width 1280 --height 720 --framerate 25 \
#     --level 4.2 --low-latency \
#     --output tcp://pi5.local:8554/camera
#
# View streams at:
#   RTSP:   rtsp://pi5.local:8554/camera
#   WebRTC: http://pi5.local:8889/camera
#   HLS:    http://pi5.local:8888/camera/index.m3u8
#
# With authentication (if enabled):
#   RTSP:   rtsp://viewer:password@pi5.local:8554/camera
#
# To add a new camera:
#   1. Add a new path section with unique name (e.g., "front-door")
#   2. Configure Pi Zero to stream to that path
#   3. Restart MediaMTX: sudo systemctl restart mediamtx
#
# Or use the helper script:
#   ./scripts/add-camera-path.sh
#
###############################################

###############################################
# Security Notes:
###############################################
#
# 1. Enable authentication (readUser/readPass) for viewer access
# 2. Use firewall rules to restrict access to port 8554
# 3. Consider VPN for remote access
# 4. Keep MediaMTX updated for security patches
# 5. Use HTTPS for WebRTC when accessing remotely
#
###############################################

###############################################
# Performance Tuning (Pi 5):
###############################################
#
# The Raspberry Pi 5 can handle:
#   - 4-6 simultaneous 720p@25fps H.264 streams
#   - Multiple concurrent viewers per stream
#   - WebRTC, HLS, and RTSP simultaneously
#
# Optimizations:
#   - Use wired Ethernet on Pi 5 for best performance
#   - Keep Pi Zero cameras on 2.4GHz Wi-Fi for range
#   - TCP streaming recommended for Wi-Fi reliability
#   - UDP streaming for local LAN with minimal latency
#
# For larger deployments:
#   - Use multiple Pi 5 servers (4-6 cameras each)
#   - Segment networks with VLANs
#   - Consider dedicated NVR software for recording
#
###############################################
